openapi: "3.0.3"
info:
  title: "PKTourAdmin"
  description: "Poker Tournament Administration API"
  version: "1.0.0"
servers:
  - url: "http://0.0.0.0:8095"
paths:
  /players:
    post:
      summary: Add a new player to the tournament
      operationId: createPlayer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: josé
      responses:
        '201':
          description: Player created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 68346f4356011271d92d310f
        '400':
          description: Bad request (e.g. missing name)
        '401':
          description: Unauthorized
        '409':
          description: Conflict (name already exists)
    put:
      summary: Update a player's score
      operationId: updatePlayerScore
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - score
              properties:
                id:
                  type: string
                  example: 68346f4356011271d92d310f
                score:
                  type: integer
                  minimum: 0
                  example: 405
      responses:
        '204':
          description: Score updated successfully (no content)
        '400':
          description: Bad request (e.g. missing or invalid fields)
        '401':
          description: Unauthorized
        '404':
          description: Player not found
    delete:
      summary: Delete all players
      operationId: deleteAllPlayers
      description: Permanently deletes all players from the tournament.
      responses:
        '204':
          description: All players deleted successfully (no content)
        '401':
          description: Unauthorized
    get:
      summary: List all players ordered by rank
      operationId: listPlayers
      responses:
        '200':
          description: A list of all players ordered by rank (highest score first)
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: 68346f4356011271d92d310f
                    name:
                      type: string
                      example: josé
                    score:
                      type: integer
                      example: 5421
                    rank:
                      type: integer
                      example: 1
        '401':
          description: Unauthorized
  /player/{playerId}:
    get:
      summary: Get player by ID
      operationId: getPlayerById
      parameters:
        - name: playerId
          in: path
          required: true
          description: The unique ID of the player
          schema:
            type: string
            example: 68346f4356011271d92d310f
      responses:
        '200':
          description: Player found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 68346f4356011271d92d310f
                  name:
                    type: string
                    example: fredo
                  score:
                    type: integer
                    example: 150
                  rank:
                    type: integer
                    example: 6
        '401':
          description: Unauthorized
        '404':
          description: Player not found
components:
  schemas: {}